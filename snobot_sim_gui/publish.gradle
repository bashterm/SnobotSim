
apply plugin: 'maven-publish'
apply plugin: 'java'


task createReleaseJar(type: Jar) {
    classifier = "all"
    
    configurations {
        subproject_jars
    }
    
    dependencies {
        subproject_jars project(":snobot_sim_utilities")
        subproject_jars jar.outputs.files
        
        if(build_simulator_cpp)
        {
            subproject_jars project(":snobot_sim_jni")
        }
        
        if(build_simulator_java)
        {
            subproject_jars project(":snobot_sim_java")
        }
    }
    
    configurations.subproject_jars.each {
        if (it.toString().contains("snobot_sim")) {
            from zipTree(it)
        }
    }
}


task javadoc(type: Javadoc, overwrite: true) {
    source = sourceSets.main.allJava
    classpath = configurations.compile
    
    javadoc.options.links("http://docs.oracle.com/javase/8/docs/api/")
    options.addStringOption "tag", "pre:a:Pre-Condition"
    options.addStringOption('Xdoclint:accessibility,syntax,reference,html', '-quiet')
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task copyDependencies(type: Zip)  {
        
    doFirst {
        copy {
            configurations.native3rdPartyDeps.each {
                println it
                from zipTree(it)
                into destinationDir.toString() + "/jinput_native"
                include "*.dll"
                include "*.pdb"
                include "*.so"
            }
        }
    }

    destinationDir = project.buildDir
    classifier = "javadeps"
    
    from configurations.compile {
        into "dependencies"
        exclude "jinput-platform-2.0.7-natives-*.jar"
    }
    
    from (destinationDir.toString() + "/jinput_native") {
        into "native"
    }
}

publishing {
    repositories {
       maven {
           url maven_publishing_path
       }
    }
    publications {
        snobot_sim_gui(MavenPublication) {
            groupId 'com.snobot.simulator'
            artifactId 'snobot_sim_gui'
            version maven_version
            
            artifact jar
            artifact javadocJar
            artifact sourcesJar
            artifact copyDependencies
            artifact createReleaseJar
        }
        
        snobot_sim_gui_application(MavenPublication) {
            groupId 'com.snobot.simulator'
            artifactId 'snobot_sim_gui_application'
            version maven_version
            
            artifact distZip
            artifact distTar
        }
    }

}