

buildscript {
    repositories {
        mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'gradle.plugin.edu.wpi.first:native-utils:1.2.12'
    }
}

plugins {
    id 'edu.wpi.first.wpilib.versioning.WPILibVersioningPlugin' version '1.6'
}

task clean(type: Delete) {
    delete buildDir
}

ext.build_simulator_cpp = false
ext.build_simulator_java = true

/////////////////////////////////////////
// Specify WPI Versions
ext.getHalHeadersVersion = {
    return 'edu.wpi.first.hal:hal:2017.3.1-20170908015814-103-g57ba589:headers@zip'
}
ext.getWpilibjVersion = {
    return '2017.3.1-20170908015815-103-g57ba589'
}
ext.getWpiUtilVersion = {
    return '2.0.0-20170907010827-33-gef85809'
}
ext.getNtCoreVersion = {
    return '4.0.0-alpha-1-20170907000421-20-g95bce5d'
}
ext.getWpilibcVersion = {
    return '2017.3.1-20170908015815-103-g57ba589'
}
/////////////////////////////////////////

// Publshing Information

ext.maven_publishing_path = '/home/pj/GitHub/FIRST/2017/maven_repo/'
if(hasProperty('maven_repo'))
{
    ext.maven_publishing_path = maven_repo
}
ext.maven_publishing_path = new File(maven_publishing_path).getAbsolutePath()
println "Publishing maven to " + ext.maven_publishing_path.toString()

ext.maven_version = "0.2"
if(hasProperty('maven_version'))
{
    ext.maven_version = maven_version
}

apply from: 'publish.gradle'

task wrapper(type: Wrapper) {
    gradleVersion = '4.1'
}


task tempCombineWindowsAndLinuxWpilibjLibraries(type: Jar) {
   destinationDir(file('temp_libs'))
   classifier "wpilibj-jni-ABCD-all"
   
   from(zipTree('temp_libs/wpilibj-jni-ABCD-windowsx86-64.jar'))
   from(zipTree('temp_libs/wpilibj-jni-ABCD-linuxx86-64.jar'))
}


task tempCombineWindowsAndLinuxWpilibcLibraries(type: Zip) {
   destinationDir(file('temp_libs'))
   classifier "wpilibc-ABCD-all"
   
   from(zipTree('temp_libs/wpilibc-ABCD-windowsx86-64.zip'))
   from(zipTree('temp_libs/wpilibc-ABCD-linuxx86-64.zip'))
}




