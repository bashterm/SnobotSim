import org.gradle.internal.os.OperatingSystem

apply plugin: 'maven-publish'
apply plugin: 'edu.wpi.first.wpilib.versioning.WPILibVersioningPlugin'

def getVersion = {
    if (WPILibVersion.version.contains('-'))
        return WPILibVersion.version.substring(WPILibVersion.version.indexOf('-'))
    else
        return ""
}

def utilVersion = "1.0.2${-> getVersion()}"
def utilFile = file("$buildDir/wpiutil.txt")
def snobotSimHalFile = file("$buildDir/snobotSimHal.txt")

task outputVersions() {
    description = 'Prints the versions of snobotSimHal and wpiutil to a file for use by the downstream packaging project'
    group = 'Build'
    outputs.files(utilFile, snobotSimHalFile)

    doFirst {
        buildDir.mkdir()
    }

    doLast {
        utilFile.write utilVersion
        snobotSimHalFile.write WPILibVersion.version
    }
}

task clean(type: Delete) {
    delete utilFile
    delete snobotSimHalFile
}

outputVersions.mustRunAfter clean

project(':native:wpiutil').build.dependsOn outputVersions
project(':native:snobotSimHal').build.dependsOn outputVersions

// We change what repo we publish to depending on whether this is a development, beta, stable, or full
// release. This is set up in the main gradle file.
publishing {
    publications {
        def nat = project('native:snobotSimHal')
        if (!project.hasProperty('skipJava')) {
            java(MavenPublication) {
                artifact nat.jar
                artifact nat.networktablesJavaSource
                artifact nat.networktablesJavadoc

                if (project.hasProperty('makeDesktop')) {
                    artifact nat.jar, {
                        classifier = 'desktop'
                    }
                }

                groupId 'edu.wpi.first.wpilib.networktables.java'
                artifactId 'NetworkTables'
                version WPILibVersion.version
            }
        }
        cpp(MavenPublication) {
            artifact nat.snobotSimHalZip
            artifact snobotSimHalSourceZip

            if (project.hasProperty('makeDesktop')) {
                artifact nat.snobotSimHalZip, {
                    classifier = 'desktop'
                }
            }

            groupId 'edu.wpi.first.wpilib.networktables.cpp'
            artifactId 'NetworkTables'
            version WPILibVersion.version
        }
        wpiutil(MavenPublication) {
            artifact project(':native:wpiutil').wpiutilZip
            artifact wpiutilSourceZip

            if (project.hasProperty('makeDesktop')) {
                artifact project(':native:wpiutil').wpiutilZip, {
                    classifier = 'desktop'
                }
            }

            groupId 'edu.wpi.first.wpilib'
            artifactId 'wpiutil'
            version utilVersion
        }
    }
}
